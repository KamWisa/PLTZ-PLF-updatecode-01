/PROG  B_RSR0001
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 13692;
CREATE		= DATE 23-05-30  TIME 13:59:32;
MODIFIED	= DATE 23-05-30  TIME 13:59:32;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 655;
MEMORY_SIZE	= 14168;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/MN
   1:  LBL[6] ;
   2:  IF (R[6]=1) THEN ;
   3:  MESSAGE[RejectPallet] ;
   4:  ENDIF ;
   5:  MESSAGE[Start ] ;
   6:  OVERRIDE=50% ;
   7:  R[6]=0    ;
   8:  DO[1]=OFF ;
   9:  DO[2]=OFF ;
  10:  DO[3]=OFF ;
  11:  DO[4]=OFF ;
  12:  UFRAME_NUM=1 ;
  13:  UTOOL_NUM=1 ;
  14:   ;
  15:  PR[5]=LPOS    ;
  16:  WAIT   1.00(sec) ;
  17:  R[1]=PR[5,3]    ;
  18:  IF (R[1]<=0 OR R[1]>500) THEN ;
  19:  PR[5,3]=R[2]    ;
  20:  PR[5,4]=0    ;
  21:  PR[5,5]=0    ;
  22:  PR[5,6]=0    ;
  23:L PR[5] 2000mm/sec FINE DB  100.0mm,CALL OPEN_GRIPPER    ;
  24:  WAIT    .50(sec) ;
  25:  CALL OPEN_GRIPPER    ;
  26:  CALL OPEN_GRIPPER1    ;
  27:  PR[5,1]=1600    ;
  28:L PR[5] 1000mm/sec CNT100 DB  100.0mm,CALL OPEN_GRIPPER1    ;
  29:  PR[5,2]=PR[1,2]    ;
  30:L PR[5] 2000mm/sec CNT100    ;
  31:   ;
  32:  ENDIF ;
  33:L PR[1] 1500mm/sec FINE DB    0.0mm,CALL CHECKGRIPPEROPEN    ;
  34:   ;
  35:  //WAIT   5.00(sec) ;
  36:  LBL[5] ;
  37:  MESSAGE[Ready Start L1 & L2] ;
  38:  !WaitProductReady ;
  39:  WAIT (DI[2]=ON OR DI[3]=ON)    ;
  40:  OVERRIDE=R[37] ;
  41:   ;
  42:  !CheckWorkSpace ;
  43:  !10 Kg ;
  44:  IF (R[26]=1) THEN ;
  45:  IF (R[22]*5>1800) OR (R[23]*3>1800) THEN ;
  46:  DO[24]=PULSE,1.0sec ;
  47:  MESSAGE[Bag size out of range] ;
  48:  JMP LBL[5] ;
  49:  ELSE ;
  50:  DO[24]=OFF ;
  51:  ENDIF ;
  52:  ENDIF ;
  53:  !30 Kg ;
  54:  IF (R[26]=2) THEN ;
  55:  IF (R[22]*4>2000) OR (R[23]*2>2000) THEN ;
  56:  DO[24]=PULSE,1.0sec ;
  57:  MESSAGE[Bag size out of range] ;
  58:  JMP LBL[5] ;
  59:  ELSE ;
  60:  DO[24]=OFF ;
  61:  ENDIF ;
  62:  ENDIF ;
  63:   ;
  64:  IF (DI[2]=ON) THEN ;
  65:  !Set LevelPallet 1-4 Left ;
  66:  IF (R[20]=1) THEN ;
  67:  MESSAGE[1 Pallet L1] ;
  68:  R[41]=R[74]    ;
  69:  ENDIF ;
  70:  IF (R[20]=2) THEN ;
  71:  MESSAGE[2 Pallet L1] ;
  72:  R[41]=R[75]    ;
  73:  ENDIF ;
  74:  IF (R[20]=3) THEN ;
  75:  MESSAGE[3 Pallet L1] ;
  76:  R[41]=R[76]    ;
  77:  ENDIF ;
  78:  IF (R[20]=4) THEN ;
  79:  MESSAGE[4 Pallet L1] ;
  80:  R[41]=R[77]    ;
  81:  ENDIF ;
  82:  !End SetLevelPallet ;
  83:  ENDIF ;
  84:   ;
  85:  IF (DI[3]=ON) THEN ;
  86:  !Set LevelPallet 1-4 Right ;
  87:  IF (R[21]=1) THEN ;
  88:  MESSAGE[1 Pallet L2] ;
  89:  R[41]=R[78]    ;
  90:  ENDIF ;
  91:  IF (R[21]=2) THEN ;
  92:  MESSAGE[2 Pallet L2] ;
  93:  R[41]=R[79]    ;
  94:  ENDIF ;
  95:  IF (R[21]=3) THEN ;
  96:  MESSAGE[3 Pallet L2] ;
  97:  R[41]=R[80]    ;
  98:  ENDIF ;
  99:  IF (R[21]=4) THEN ;
 100:  MESSAGE[4 Pallet L2] ;
 101:  R[41]=R[81]    ;
 102:  ENDIF ;
 103:  !End SetLevelPallet ;
 104:  ENDIF ;
 105:   ;
 106:  WAIT    .50(sec) ;
 107:   ;
 108:  !Haft BagWidth ;
 109:  R[34]=R[22]/2    ;
 110:  !Haft Baglength ;
 111:  R[35]=R[23]/2    ;
 112:   ;
 113:  !CalOffsetBeforDrop ;
 114:  PR[3,3]=R[24]*1.5    ;
 115:  !CalOffsetAfterDrop ;
 116:  PR[7,3]=R[24]*1.5    ;
 117:   ;
 118:  !CalAddJust Length ;
 119:  IF (R[23]>=851) THEN ;
 120:  MESSAGE[R[23] > 850 mm] ;
 121:  R[3]=R[23]*2    ;
 122:  R[3]=1700-R[3]    ;
 123:  R[3]=R[3]/2    ;
 124:  ELSE ;
 125:  MESSAGE[850 mm] ;
 126:  R[23]=850    ;
 127:  R[3]=0    ;
 128:  ENDIF ;
 129:  !End CalAddJust Length ;
 130:   ;
 131:  !CalAddJust Width ;
 132:  IF (R[22]>=426) THEN ;
 133:  MESSAGE[R[22] > 425 mm] ;
 134:  R[5]=R[22]*4    ;
 135:  R[5]=1700-R[5]    ;
 136:  R[5]=R[5]/2    ;
 137:  ELSE ;
 138:  MESSAGE[425 mm] ;
 139:  R[22]=425    ;
 140:  R[5]=0    ;
 141:  ENDIF ;
 142:  !End CalAddJust Width ;
 143:   ;
 144:   ;
 145:  !Select Msaa ;
 146:  !R[26]=2 30 KG ;
 147:  !R[26]=1 10 KG ;
 148:  WAIT (R[26]=1 OR R[26]=2)    ;
 149:   ;
 150:  IF (DI[2]=ON AND R[26]=2) THEN ;
 151:  !SelectBase L1 ;
 152:  MESSAGE[Stsrt L1] ;
 153:  UFRAME_NUM=3 ;
 154:  WAIT    .50(sec) ;
 155:  FOR R[4]=1 TO 6 ;
 156:  PR[51,R[4]]=0    ;
 157:  ENDFOR ;
 158:  PR[9]=PR[2]    ;
 159:  PR[31]=PR[4]    ;
 160:   ;
 161:  !CalculatePos 1-16 ;
 162:   ;
 163:  PR[51,1]=PR[51,1]+R[5]    ;
 164:  PR[51,2]=PR[51,2]+R[3]    ;
 165:   ;
 166:  FOR R[4]=11 TO 26 ;
 167:  PR[R[4]]=PR[51]    ;
 168:  ENDFOR ;
 169:   ;
 170:  PR[11,1]=PR[11,1]+R[34]    ;
 171:  PR[11,2]=PR[11,2]+R[23]+R[35]    ;
 172:  PR[11,3]=R[41]    ;
 173:  PR[11,6]=R[42]    ;
 174:   ;
 175:  PR[12,1]=PR[12,1]+R[34]    ;
 176:  PR[12,2]=PR[12,2]+R[35]    ;
 177:  PR[12,3]=R[41]    ;
 178:  PR[12,6]=R[43]    ;
 179:   ;
 180:  PR[13,1]=PR[13,1]+R[22]+R[23]+R[34]    ;
 181:  PR[13,2]=PR[13,2]+R[23]+R[35]    ;
 182:  PR[13,3]=R[41]    ;
 183:  PR[13,6]=R[44]    ;
 184:   ;
 185:  PR[14,1]=PR[14,1]+R[22]+R[23]+R[34]    ;
 186:  PR[14,2]=PR[14,2]+R[35]    ;
 187:  PR[14,2]=PR[14,2]    ;
 188:  PR[14,3]=R[41]    ;
 189:  PR[14,6]=R[45]    ;
 190:   ;
 191:  PR[15,1]=PR[15,1]+R[22]+R[35]    ;
 192:  PR[15,2]=PR[15,2]+R[22]+R[22]+R[22]+R[34]    ;
 193:  PR[15,3]=R[41]    ;
 194:  PR[15,6]=R[46]    ;
 195:   ;
 196:  PR[16,1]=PR[16,1]+R[22]+R[35]    ;
 197:  PR[16,2]=PR[16,2]+R[34]    ;
 198:  PR[16,3]=R[41]    ;
 199:  PR[16,6]=R[47]    ;
 200:   ;
 201:  PR[17,1]=PR[17,1]+R[22]+R[35]    ;
 202:  PR[17,2]=PR[17,2]+R[22]+R[22]+R[34]    ;
 203:  PR[17,3]=R[41]    ;
 204:  PR[17,6]=R[48]    ;
 205:   ;
 206:  PR[18,1]=PR[18,1]+R[22]+R[35]    ;
 207:  PR[18,2]=PR[18,2]+R[22]+R[34]    ;
 208:  PR[18,3]=R[41]    ;
 209:  PR[18,6]=R[49]    ;
 210:   ;
 211:  PR[19,1]=PR[19,1]+R[35]    ;
 212:  PR[19,2]=PR[19,2]+R[22]+R[23]+R[34]    ;
 213:  //PR[22,3]=R[24]*2    ;
 214:  PR[19,3]=R[24]    ;
 215:  PR[19,3]=PR[19,3]+R[41]    ;
 216:  PR[19,6]=R[50]    ;
 217:   ;
 218:  PR[20,1]=PR[20,1]+R[23]+R[35]    ;
 219:  PR[20,2]=PR[20,2]+R[22]+R[23]+R[34]    ;
 220:  //PR[21,3]=R[24]*2    ;
 221:  PR[20,3]=R[24]    ;
 222:  PR[20,3]=PR[20,3]+R[41]    ;
 223:  PR[20,6]=R[51]    ;
 224:   ;
 225:  PR[21,1]=PR[21,1]+R[35]    ;
 226:  PR[21,2]=PR[21,2]+R[34]    ;
 227:  //PR[20,3]=R[24]*2    ;
 228:  PR[21,3]=R[24]    ;
 229:  PR[21,3]=PR[21,3]+R[41]    ;
 230:  PR[21,6]=R[52]    ;
 231:   ;
 232:  PR[22,1]=PR[22,1]+R[23]+R[35]    ;
 233:  PR[22,2]=PR[22,2]+R[34]    ;
 234:  //PR[19,3]=R[24]*2    ;
 235:  PR[22,3]=R[24]    ;
 236:  PR[22,3]=PR[22,3]+R[41]    ;
 237:  PR[22,6]=R[53]    ;
 238:   ;
 239:  PR[23,1]=PR[23,1]+R[34]    ;
 240:  PR[23,2]=PR[23,2]+R[22]+R[35]    ;
 241:  //PR[24,3]=R[24]*2    ;
 242:  PR[23,3]=R[24]    ;
 243:  PR[23,3]=PR[23,3]+R[41]    ;
 244:  PR[23,6]=R[54]    ;
 245:   ;
 246:  PR[24,1]=PR[24,1]+R[22]+R[22]+R[22]+R[34]    ;
 247:  PR[24,2]=PR[24,2]+R[22]+R[35]    ;
 248:  //PR[23,3]=R[24]*2    ;
 249:  PR[24,3]=R[24]    ;
 250:  PR[24,3]=PR[24,3]+R[41]    ;
 251:  PR[24,6]=R[55]    ;
 252:   ;
 253:  PR[25,1]=PR[25,1]+R[22]+R[34]    ;
 254:  PR[25,2]=PR[25,2]+R[22]+R[35]    ;
 255:  //PR[26,3]=R[24]*2    ;
 256:  PR[25,3]=R[24]    ;
 257:  PR[25,3]=PR[25,3]+R[41]    ;
 258:  PR[25,6]=R[56]    ;
 259:   ;
 260:  PR[26,1]=PR[26,1]+R[22]+R[22]+R[34]    ;
 261:  PR[26,2]=PR[26,2]+R[22]+R[35]    ;
 262:  //PR[25,3]=R[24]*2    ;
 263:  PR[26,3]=R[24]    ;
 264:  PR[26,3]=PR[26,3]+R[41]    ;
 265:  PR[26,6]=R[57]    ;
 266:   ;
 267:  FOR R[38]=11 TO 26 ;
 268:  PR[R[38],3]=PR[R[38],3]+70    ;
 269:  ENDFOR ;
 270:   ;
 271:  IF R[26]=2,JMP LBL[4] ;
 272:  //IF R[13]=10,JMP LBL[4] ;
 273:  ENDIF ;
 274:   ;
 275:  IF (DI[3]=ON AND R[26]=2) THEN ;
 276:  !SelectBase L2 ;
 277:  MESSAGE[Stsrt L2] ;
 278:  UFRAME_NUM=2 ;
 279:  WAIT    .50(sec) ;
 280:  FOR R[4]=1 TO 6 ;
 281:  PR[51,R[4]]=0    ;
 282:  ENDFOR ;
 283:  PR[9]=PR[8]    ;
 284:  PR[31]=PR[10]    ;
 285:   ;
 286:  !CalculatePos 1-16 ;
 287:  PR[51,1]=PR[51,1]+R[5]    ;
 288:  PR[51,2]=PR[51,2]+R[3]    ;
 289:   ;
 290:  FOR R[4]=11 TO 26 ;
 291:  PR[R[4]]=PR[51]    ;
 292:  ENDFOR ;
 293:   ;
 294:  PR[11,1]=PR[11,1]+R[34]    ;
 295:  PR[11,2]=PR[11,2]+R[35]    ;
 296:  PR[11,3]=R[41]    ;
 297:  PR[11,6]=R[58]    ;
 298:   ;
 299:  PR[12,1]=PR[12,1]+R[34]    ;
 300:  PR[12,2]=PR[12,2]+R[23]+R[35]    ;
 301:  PR[12,3]=R[41]    ;
 302:  PR[12,6]=R[59]    ;
 303:   ;
 304:  PR[13,1]=PR[13,1]+R[22]+R[23]+R[34]    ;
 305:  PR[13,2]=PR[13,2]+R[35]    ;
 306:  PR[13,2]=PR[13,2]    ;
 307:  PR[13,3]=R[41]    ;
 308:  PR[13,6]=R[60]    ;
 309:   ;
 310:  PR[14,1]=PR[14,1]+R[22]+R[23]+R[34]    ;
 311:  PR[14,2]=PR[14,2]+R[23]+R[35]    ;
 312:  PR[14,3]=R[41]    ;
 313:  PR[14,6]=R[61]    ;
 314:   ;
 315:  PR[15,1]=PR[15,1]+R[22]+R[35]    ;
 316:  PR[15,2]=PR[15,2]+R[34]    ;
 317:  PR[15,3]=R[41]    ;
 318:  PR[15,6]=R[62]    ;
 319:   ;
 320:  PR[16,1]=PR[16,1]+R[22]+R[35]    ;
 321:  PR[16,2]=PR[16,2]+R[22]+R[22]+R[22]+R[34]    ;
 322:  PR[16,3]=R[41]    ;
 323:  PR[16,6]=R[63]    ;
 324:   ;
 325:  PR[17,1]=PR[17,1]+R[22]+R[35]    ;
 326:  PR[17,2]=PR[17,2]+R[22]+R[34]    ;
 327:  PR[17,3]=R[41]    ;
 328:  PR[17,6]=R[64]    ;
 329:   ;
 330:  PR[18,1]=PR[18,1]+R[22]+R[35]    ;
 331:  PR[18,2]=PR[18,2]+R[22]+R[22]+R[34]    ;
 332:  PR[18,3]=R[41]    ;
 333:  PR[18,6]=R[65]    ;
 334:   ;
 335:  PR[19,1]=PR[19,1]+R[35]    ;
 336:  PR[19,2]=PR[19,2]+R[34]    ;
 337:  //PR[20,3]=R[24]*2    ;
 338:  PR[19,3]=R[24]    ;
 339:  PR[19,3]=PR[19,3]+R[41]    ;
 340:  PR[19,6]=R[66]    ;
 341:   ;
 342:  PR[20,1]=PR[20,1]+R[23]+R[35]    ;
 343:  PR[20,2]=PR[20,2]+R[34]    ;
 344:  //PR[19,3]=R[24]*2    ;
 345:  PR[20,3]=R[24]    ;
 346:  PR[20,3]=PR[20,3]+R[41]    ;
 347:  PR[20,6]=R[67]    ;
 348:   ;
 349:  PR[21,1]=PR[21,1]+R[35]    ;
 350:  PR[21,2]=PR[21,2]+R[22]+R[23]+R[34]    ;
 351:  //PR[22,3]=R[24]*2    ;
 352:  PR[21,3]=R[24]    ;
 353:  PR[21,3]=PR[21,3]+R[41]    ;
 354:  PR[21,6]=R[68]    ;
 355:   ;
 356:  PR[22,1]=PR[22,1]+R[23]+R[35]    ;
 357:  PR[22,2]=PR[22,2]+R[22]+R[23]+R[34]    ;
 358:  //PR[21,3]=R[24]*2    ;
 359:  PR[22,3]=R[24]    ;
 360:  PR[22,3]=PR[22,3]+R[41]    ;
 361:  PR[22,6]=R[69]    ;
 362:   ;
 363:  PR[23,1]=PR[23,1]+R[34]    ;
 364:  PR[23,2]=PR[23,2]+R[22]+R[35]    ;
 365:  //PR[24,3]=R[24]*2    ;
 366:  PR[23,3]=R[24]    ;
 367:  PR[23,3]=PR[23,3]+R[41]    ;
 368:  PR[23,6]=R[70]    ;
 369:   ;
 370:  PR[24,1]=PR[24,1]+R[22]+R[22]+R[22]+R[34]    ;
 371:  PR[24,2]=PR[24,2]+R[22]+R[35]    ;
 372:  //PR[23,3]=R[24]*2    ;
 373:  PR[24,3]=R[24]    ;
 374:  PR[24,3]=PR[24,3]+R[41]    ;
 375:  PR[24,6]=R[71]    ;
 376:   ;
 377:  PR[25,1]=PR[25,1]+R[22]+R[34]    ;
 378:  PR[25,2]=PR[25,2]+R[22]+R[35]    ;
 379:  //PR[26,3]=R[24]*2    ;
 380:  PR[25,3]=R[24]    ;
 381:  PR[25,3]=PR[25,3]+R[41]    ;
 382:  PR[25,6]=R[72]    ;
 383:   ;
 384:  PR[26,1]=PR[26,1]+R[22]+R[22]+R[34]    ;
 385:  PR[26,2]=PR[26,2]+R[22]+R[35]    ;
 386:  //PR[25,3]=R[24]*2    ;
 387:  PR[26,3]=R[24]    ;
 388:  PR[26,3]=PR[26,3]+R[41]    ;
 389:  PR[26,6]=R[73]    ;
 390:   ;
 391:  FOR R[38]=11 TO 26 ;
 392:  PR[R[38],3]=PR[R[38],3]+70    ;
 393:  ENDFOR ;
 394:   ;
 395:   ;
 396:  IF R[13]=30,JMP LBL[4] ;
 397:  //IF R[13]=10,JMP LBL[4] ;
 398:  ENDIF ;
 399:   ;
 400:  LBL[4] ;
 401:  WAIT    .10(sec) ;
 402:  WAIT (DI[9]=ON AND DI[10]=ON AND DI[11]=ON AND DI[12]=ON)    ;
 403:   ;
 404:  !SetDef OffetPikBag ;
 405:  PR[6,3]=300    ;
 406:L PR[9] 1500mm/sec CNT100 Tool_Offset,PR[6]    ;
 407:   ;
 408:  WAIT    .10(sec) ;
 409:   ;
 410:  R[36]=11    ;
 411:  R[39]=0    ;
 412:  R[40]=1    ;
 413:   ;
 414:  !ForStartDropLevel 1-12 ;
 415:  FOR R[40]=R[40] TO R[27] ;
 416:  //FOR R[40]=9 TO 9 ;
 417:   ;
 418:  !CheckLevel 1357911 ;
 419:  IF (R[40]=1 OR R[40]=3 OR R[40]=5 OR R[40]=7 OR R[40]=9 OR R[40]=11) THEN ;
 420:  JMP LBL[1] ;
 421:  ELSE ;
 422:  !CheckLevel 24681012 ;
 423:  JMP LBL[2] ;
 424:  ENDIF ;
 425:   ;
 426:  LBL[1] ;
 427:  !StartDropLevel 1257911 ;
 428:  MESSAGE[Running 1-8] ;
 429:  FOR R[36]=11 TO 18 ;
 430:  !SelectCalHighDropBag ;
 431:  //IF (R[40]=1) THEN ;
 432:  //PR[R[36],3]=R[24]+R[41]    ;
 433:  //ENDIF ;
 434:  IF (R[40]=3) THEN ;
 435:  PR[R[36],3]=R[24]*2    ;
 436:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 437:  ENDIF ;
 438:  IF (R[40]=5) THEN ;
 439:  PR[R[36],3]=R[24]*4    ;
 440:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 441:  ENDIF ;
 442:  IF (R[40]=7) THEN ;
 443:  PR[R[36],3]=R[24]*6    ;
 444:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 445:  ENDIF ;
 446:  IF (R[40]=9) THEN ;
 447:  PR[R[36],3]=R[24]*8    ;
 448:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 449:  ENDIF ;
 450:  IF (R[40]=11) THEN ;
 451:  PR[R[36],3]=R[24]*10    ;
 452:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 453:  ENDIF ;
 454:  !EndCalHighDrop ;
 455:   ;
 456:  !SelectCalPosEsc ;
 457:  IF (PR[R[36],3]+PR[7,3]>750) THEN ;
 458:  PR[6,3]=PR[R[36],3]+PR[7,3]-PR[2,3]    ;
 459:  PR[31,3]=PR[R[36],3]+PR[7,3]    ;
 460:  ELSE ;
 461:  PR[31,3]=PR[6,3]+PR[2,3]    ;
 462:  ENDIF ;
 463:  !EndSelectCalPosEsc ;
 464:   ;
 465:  IF (R[36]=17 OR R[36]=18) THEN ;
 466:  PR[30,3]=R[32]    ;
 467:  ELSE ;
 468:  PR[30,3]=R[33]    ;
 469:  ENDIF ;
 470:   ;
 471:  //L PR[9] 1500mm/sec FINE    ;
 472:  WAIT R[7] ;
 473:  !Product Ready ;
 474:  MESSAGE[Wait Bag Or Reject] ;
 475:  WAIT DI[1]=ON OR R[6]=1    ;
 476:  !RejectPallet ;
 477:  IF R[6]=1,JMP LBL[6] ;
 478:  DO[1]=ON ;
 479:  !MoveToPickPosBag ;
 480:  //CALL CLOSE_GRIPPER    ;
 481:L PR[9] 1500mm/sec FINE DB    0.0mm,CALL CLOSE_GRIPPER    ;
 482:  //DO[13]=ON ;
 483:  !MoveToAfterPickPos ;
 484:L PR[9] 1500mm/sec CNT10 Tool_Offset,PR[6] DO[13]=ON    ;
 485:  !SendPickBag OK ;
 486:  DO[2]=PULSE,0.5sec ;
 487:  !MoveToBefterPosEsc ;
 488:L PR[31] 4000mm/sec CNT50    ;
 489:   ;
 490:  !MoveToBefterDropPos ;
 491:L PR[R[36]] 4000mm/sec CNT10 Tool_Offset,PR[3]    ;
 492:   ;
 493:  !MoveToDropPos ;
 494:L PR[R[36]] 4000mm/sec FINE Tool_Offset,PR[30] DB  100.0mm,CALL OPEN_GRIPPER    ;
 495:  !MoveToAfterDropPos ;
 496:L PR[R[36]] 4000mm/sec CNT10 Tool_Offset,PR[7] DB    0.0mm,CALL OPEN_GRIPPER1    ;
 497:  !MoveToAfterPosEsc ;
 498:L PR[31] 4000mm/sec CNT50    ;
 499:  !MoveToBefterPickPos ;
 500:L PR[9] 4000mm/sec CNT10 Tool_Offset,PR[6] DB    0.0mm,CALL CHECKGRIPPEROPEN    ;
 501:  !CounterDropBag +1 ;
 502:  R[39]=R[39]+1    ;
 503:   ;
 504:  IF (DI[2]=ON) THEN ;
 505:  !L1 SendCountBag + 1 ;
 506:  GO[9]=(GO[9]+1) ;
 507:  ELSE ;
 508:  !L2 SendCountBag + 1 ;
 509:  GO[11]=(GO[11]+1) ;
 510:  ENDIF ;
 511:   ;
 512:  DO[1]=OFF ;
 513:   ;
 514:  ENDFOR ;
 515:  !EndFor 1357911 ;
 516:   ;
 517:  IF (DI[2]=ON) THEN ;
 518:  !L1 SendCountLevel + 1 ;
 519:  GO[9]=1 ;
 520:  GO[10]=(GO[10]+1) ;
 521:  ELSE ;
 522:  !L2 SendCountLevel + 1 ;
 523:  GO[11]=1 ;
 524:  GO[12]=(GO[12]+1) ;
 525:  ENDIF ;
 526:   ;
 527:  !GotoLoopFor R[40]<3 ;
 528:  JMP LBL[3] ;
 529:   ;
 530:  LBL[2] ;
 531:  MESSAGE[Running 9-16] ;
 532:  !StartDropLevel 24681012 ;
 533:  FOR R[36]=19 TO 26 ;
 534:   ;
 535:  //IF (R[40]=2) THEN ;
 536:  //PR[R[36],3]=R[24]*2    ;
 537:  //ENDIF ;
 538:  IF (R[40]=4) THEN ;
 539:  PR[R[36],3]=R[24]*3    ;
 540:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 541:  ENDIF ;
 542:  IF (R[40]=6) THEN ;
 543:  PR[R[36],3]=R[24]*5    ;
 544:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 545:  ENDIF ;
 546:  IF (R[40]=8) THEN ;
 547:  PR[R[36],3]=R[24]*7    ;
 548:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 549:  ENDIF ;
 550:  IF (R[40]=10) THEN ;
 551:  PR[R[36],3]=R[24]*9    ;
 552:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 553:  ENDIF ;
 554:  IF (R[40]=12) THEN ;
 555:  PR[R[36],3]=R[24]*11    ;
 556:  PR[R[36],3]=PR[R[36],3]+R[41]    ;
 557:  ENDIF ;
 558:   ;
 559:  IF (PR[R[36],3]+PR[7,3]>750) THEN ;
 560:  PR[6,3]=PR[R[36],3]+PR[7,3]-PR[2,3]    ;
 561:  PR[31,3]=PR[R[36],3]+PR[7,3]    ;
 562:  ELSE ;
 563:  PR[31,3]=PR[6,3]+PR[2,3]    ;
 564:  ENDIF ;
 565:   ;
 566:  IF (R[36]=25 OR R[36]=26) THEN ;
 567:  PR[30,3]=R[32]    ;
 568:  ELSE ;
 569:  PR[30,3]=R[33]    ;
 570:  ENDIF ;
 571:   ;
 572:  //L PR[9] 1500mm/sec FINE    ;
 573:  WAIT R[7] ;
 574:  !Product Ready ;
 575:  MESSAGE[Wait Bag Or Reject] ;
 576:  WAIT DI[1]=ON OR R[6]=1    ;
 577:  !RejectPallet ;
 578:  IF R[6]=1,JMP LBL[6] ;
 579:  DO[1]=ON ;
 580:  !MoveToPickPosBag ;
 581:  //CALL CLOSE_GRIPPER    ;
 582:L PR[9] 1500mm/sec FINE DB    0.0mm,CALL CLOSE_GRIPPER    ;
 583:  //DO[13]=ON ;
 584:  !MoveToAfterPickPos ;
 585:L PR[9] 1500mm/sec CNT10 Tool_Offset,PR[6] DO[13]=ON    ;
 586:  !SendPickBag OK ;
 587:  DO[2]=PULSE,0.5sec ;
 588:  !MoveToBefterPosEsc ;
 589:L PR[31] 4000mm/sec CNT50    ;
 590:  //    ;
 591:  !MoveToBefterDropPos ;
 592:L PR[R[36]] 4000mm/sec CNT10 Tool_Offset,PR[3]    ;
 593:   ;
 594:  !MoveToDropPos ;
 595:L PR[R[36]] 4000mm/sec FINE Tool_Offset,PR[30] DB  100.0mm,CALL OPEN_GRIPPER    ;
 596:  !MoveToAfterDropPos ;
 597:L PR[R[36]] 4000mm/sec CNT10 Tool_Offset,PR[7] DB    0.0mm,CALL OPEN_GRIPPER1    ;
 598:  !MoveToAfterPosEsc ;
 599:L PR[31] 4000mm/sec CNT50    ;
 600:  !MoveToBefterPickPos ;
 601:L PR[9] 4000mm/sec CNT10 Tool_Offset,PR[6] DB    0.0mm,CALL CHECKGRIPPEROPEN    ;
 602:  !CounterDropBag +1 ;
 603:  R[39]=R[39]+1    ;
 604:  IF (DI[2]=ON) THEN ;
 605:  !L1 SendCountBag + 1 ;
 606:  GO[9]=(GO[9]+1) ;
 607:  ELSE ;
 608:  !L2 SendCountBag + 1 ;
 609:  GO[11]=(GO[11]+1) ;
 610:  ENDIF ;
 611:   ;
 612:  DO[1]=OFF ;
 613:  ENDFOR ;
 614:  !EndFor 24681012 ;
 615:   ;
 616:  IF (DI[2]=ON) THEN ;
 617:  !L1 SendCountLevel + 1 ;
 618:  GO[9]=1 ;
 619:  GO[10]=(GO[10]+1) ;
 620:  ELSE ;
 621:  !L2 SendCountLevel + 1 ;
 622:  GO[11]=1 ;
 623:  GO[12]=(GO[12]+1) ;
 624:  ENDIF ;
 625:   ;
 626:  LBL[3] ;
 627:  ENDFOR ;
 628:  !EndFor R[40] ;
 629:   ;
 630:  !MoveToBeforPickBag ;
 631:L PR[9] 3000mm/sec FINE Tool_Offset,PR[7]    ;
 632:   ;
 633:  IF (DI[2]=ON) THEN ;
 634:  !Place Finish_L1 ;
 635:  DO[3]=PULSE,1.0sec ;
 636:  GO[9]=1 ;
 637:  GO[10]=1 ;
 638:  MESSAGE[Finish_L1] ;
 639:  ELSE ;
 640:  !Place Finish_L2 ;
 641:  GO[11]=1 ;
 642:  GO[12]=1 ;
 643:  DO[4]=PULSE,1.0sec ;
 644:  MESSAGE[Finish_L2] ;
 645:  ENDIF ;
 646:   ;
 647:  !Confrim Finish ;
 648:  MESSAGE[Wait Confrim Finish] ;
 649:  WAIT (DI[4]=ON OR DI[5]=ON)    ;
 650:   ;
 651:  !JumpToStartJob ;
 652:  JMP LBL[5] ;
 653:   ;
 654:   ;
 655:   ;
/POS
/END
