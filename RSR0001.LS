/PROG  RSR0001
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 3140;
CREATE		= DATE 23-05-30  TIME 13:59:40;
MODIFIED	= DATE 23-06-01  TIME 09:59:58;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 160;
MEMORY_SIZE	= 3740;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/MN
   1:  !Palletizer PLF PK5 ;
   2:   ;
   3:   ;
   4:  !JumpReject ;
   5:  LBL[6] ;
   6:  CALL FHOME    ;
   7:  //MESSAGE[WaitSetHome] ;
   8:  WAIT R[7]=1    ;
   9:   ;
  10:  !JumpLoop ;
  11:  LBL[5] ;
  12:   ;
  13:  //MESSAGE[Ready Start L1 & L2] ;
  14:  !WaitProductReady ;
  15:  WAIT (DI[2]=ON OR DI[3]=ON)    ;
  16:   ;
  17:  !Set Speed ROB ;
  18:  OVERRIDE=R[37] ;
  19:   ;
  20:  !CheckWorkSpace ;
  21:  CALL FCALSPACE    ;
  22:  //MESSAGE[WaitWorkSpace] ;
  23:  WAIT R[7]=2    ;
  24:  !Error Setting ;
  25:  IF R[85]=1,JMP LBL[5] ;
  26:   ;
  27:  LBL[8] ;
  28:   ;
  29:  !Cal Pallet L1&L2 ;
  30:  CALL FCALPALLTE    ;
  31:  //MESSAGE[WaitCalPallet] ;
  32:  WAIT R[7]=3    ;
  33:   ;
  34:  !AddJustSizeBag ;
  35:  CALL FADDJUSTBAG    ;
  36:  //MESSAGE[WaitAddJustBag] ;
  37:  WAIT R[7]=4    ;
  38:   ;
  39:  !Select Msaa ;
  40:  !R[26]=2 30 KG ;
  41:  !R[26]=1 10 KG ;
  42:  WAIT (R[26]=1 OR R[26]=2)    ;
  43:   ;
  44:  IF (DI[2]=ON AND R[26]=2) THEN ;
  45:  !SelectBase L1 ;
  46:  DO[15]=ON ;
  47:  DO[14]=OFF ;
  48:  CALL FLEFTPOSCAL    ;
  49:  //MESSAGE[WaitCalPos L1] ;
  50:  WAIT R[7]=5    ;
  51:  //IF R[26]=2,JMP LBL[4] ;
  52:  //IF R[13]=10,JMP LBL[4] ;
  53:  ENDIF ;
  54:   ;
  55:  IF (DI[3]=ON AND R[26]=2) THEN ;
  56:  !SelectBase L2 ;
  57:  DO[15]=OFF ;
  58:  DO[14]=ON ;
  59:  CALL FRIGHTPOSCAL    ;
  60:  //MESSAGE[WaitCalPos L2] ;
  61:  WAIT R[7]=6    ;
  62:  //IF R[13]=30,JMP LBL[4] ;
  63:  //IF R[13]=10,JMP LBL[4] ;
  64:  ENDIF ;
  65:   ;
  66:  //LBL[*4] ;
  67:   ;
  68:  IF (DI[2]=ON AND DO[15]=OFF) THEN ;
  69:  MESSAGE[CalPosError L1] ;
  70:  WAIT    .50(sec) ;
  71:  JMP LBL[8] ;
  72:  ENDIF ;
  73:  IF (DI[3]=ON AND DO[14]=OFF) THEN ;
  74:  WAIT    .50(sec) ;
  75:  MESSAGE[CalPosError L2] ;
  76:  JMP LBL[8] ;
  77:  ENDIF ;
  78:   ;
  79:   ;
  80:  IF (R[8]=1) THEN ;
  81:  MESSAGE[DryRun Mode] ;
  82:  ELSE ;
  83:  !Gripper Open ;
  84:  WAIT (DI[9]=ON AND DI[10]=ON AND DI[11]=ON AND DI[12]=ON)    ;
  85:  ENDIF ;
  86:   ;
  87:  !SetDef OffetPikBag ;
  88:  PR[6,3]=300    ;
  89:L PR[9] 1500mm/sec CNT100 Tool_Offset,PR[6]    ;
  90:   ;
  91:  R[36]=11    ;
  92:  R[39]=0    ;
  93:  R[40]=1    ;
  94:   ;
  95:  !ForStartDropLevel 1-12 ;
  96:  FOR R[40]=R[40] TO R[27] ;
  97:  !CheckLevel 1357911 ;
  98:  IF (R[40]=1 OR R[40]=3 OR R[40]=5 OR R[40]=7 OR R[40]=9 OR R[40]=11) THEN ;
  99:  JMP LBL[1] ;
 100:  ELSE ;
 101:  !CheckLevel 24681012 ;
 102:  JMP LBL[2] ;
 103:  ENDIF ;
 104:   ;
 105:  LBL[1] ;
 106:  !StartDropLevel 1257911 ;
 107:  MESSAGE[Running 1-8] ;
 108:  FOR R[36]=11 TO 18 ;
 109:   ;
 110:  !Calculate 1 ;
 111:  CALL FCALMOVE1    ;
 112:  WAIT R[7]=5    ;
 113:   ;
 114:  !Product Ready ;
 115:  CALL FWAITPICK    ;
 116:  !RejectPallet ;
 117:  IF R[6]=1,JMP LBL[6] ;
 118:  !MoveRobot ;
 119:  CALL FMOVEROB    ;
 120:  WAIT R[7]=7    ;
 121:  ENDFOR ;
 122:  !EndFor 1357911 ;
 123:   ;
 124:  !GotoLoopFor R[40]<3 ;
 125:  JMP LBL[3] ;
 126:   ;
 127:  LBL[2] ;
 128:  MESSAGE[Running 9-16] ;
 129:  !StartDropLevel 24681012 ;
 130:  FOR R[36]=19 TO 26 ;
 131:  !Calculate 2 ;
 132:  CALL FCALMOVE2    ;
 133:  WAIT R[7]=6    ;
 134:  !Product Ready ;
 135:  CALL FWAITPICK    ;
 136:  !RejectPallet ;
 137:  IF R[6]=1,JMP LBL[6] ;
 138:  !MoveRobot ;
 139:  CALL FMOVEROB    ;
 140:  WAIT R[7]=7    ;
 141:  ENDFOR ;
 142:  !EndFor 24681012 ;
 143:   ;
 144:  LBL[3] ;
 145:  !SendCountLevel + 1 ;
 146:  CALL FSENCUTLVE    ;
 147:  WAIT R[7]=9    ;
 148:  ENDFOR ;
 149:  !EndFor R[40] ;
 150:   ;
 151:  !MoveToBeforPickBag ;
 152:L PR[9] 3000mm/sec FINE Tool_Offset,PR[7]    ;
 153:   ;
 154:  !Place Finish ;
 155:  CALL FSENDFINISH    ;
 156:  !Confrim Finish ;
 157:  MESSAGE[Wait Confrim Finish] ;
 158:  WAIT (DI[4]=ON OR DI[5]=ON)    ;
 159:  !JumpToStartJob ;
 160:  JMP LBL[5] ;
/POS
/END
